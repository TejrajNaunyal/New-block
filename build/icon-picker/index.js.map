{"version":3,"file":"icon-picker/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAqC;AACuB;AACY;AAC1B;AACA;;AAI9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMO,IAAI,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAC5C;EACA,MAAM;IAAEC;EAAa,CAAC,GAAGF,UAAU;;EAEnC;EACA,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGP,4DAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMQ,WAAW,GAAG,CAChB;IAAEC,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAS,CAAC,EACvC;IAAED,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAS,CAAC,CACzC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBJ,cAAc,CAAC,CAACD,WAAW,CAAC;EAChC,CAAC;;EAED;EACA,MAAMM,gBAAgB,GAAIH,KAAK,IAAK;IAChCL,aAAa,CAAC;MAAEC,YAAY,EAAEI;IAAM,CAAC,CAAC;IACtCE,WAAW,CAAC,CAAC;EACjB,CAAC;;EAED;EACA,OACIE,oDAAA,CAACZ,wDAAQ,QACLY,oDAAA,CAACjB,sEAAiB,QACdiB,oDAAA,CAAChB,4DAAS;IAACiB,KAAK,EAAEnB,mDAAE,CAAC,eAAe,EAAE,aAAa;EAAE,GAEjDkB,oDAAA,CAACf,gEAAa;IACVY,KAAK,EAAEf,mDAAE,CAAC,aAAa,EAAE,aAAa,CAAE;IACxCc,KAAK,EAAEJ,YAAa;IACpBU,OAAO,EAAEP,WAAY;IACrBQ,QAAQ,EAAGP,KAAK,IAAKL,aAAa,CAAC;MAAEC,YAAY,EAAEI;IAAM,CAAC,CAAE;IAC5DQ,OAAO,EAAEN;EAAY,CACxB,CACM,CACI,CAAC,EAEpBE,oDAAA;IAAKK,SAAS,EAAC;EAAe,GAC1BL,oDAAA;IAAGK,SAAS,EAAG,MAAKb,YAAa;EAAE,CAAE,CACpC,CAAC,EAELC,WAAW,IACRO,oDAAA,CAACd,wDAAK;IACFe,KAAK,EAAEnB,mDAAE,CAAC,aAAa,EAAE,aAAa,CAAE;IACxCwB,cAAc,EAAER;EAAY,GAE5BE,oDAAA,cAEKL,WAAW,CAACY,GAAG,CAAEC,MAAM,IACpBR,oDAAA;IACIS,GAAG,EAAED,MAAM,CAACZ,KAAM;IAClBc,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACS,MAAM,CAACZ,KAAK;EAAE,GAE7CY,MAAM,CAACX,KACJ,CACX,CACA,CACF,CAEL,CAAC;AAEnB,CAAC;AAED,iEAAeR,IAAI;;;;;;;;;;;;;;;;;AClFnB;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AAC0B;AACA;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACAsB,oEAAiB,CAAEE,6CAAa,EAAE;EACjC;AACD;AACA;EACCE,IAAI,EAAE1B,6CAAI;EAEV;AACD;AACA;EACCuB,IAAIA,+CAAAA;AACL,CAAE,CAAC;;;;;;;;;;;;;;;;;;;ACtCH;AACA;AACA;AACA;AACA;AACA;AACwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGe,SAASA,IAAIA,CAAE;EAAEtB;AAAW,CAAC,EAAG;EAC7C,OACEU,oDAAA;IAAKK,SAAS,EAAC;EAAM,GACrBL,oDAAA;IAAGK,SAAS,EAAG,MAAKb,YAAa;EAAE,CAAI,CACtC,CAAC;AAEN;;;;;;;;;;;ACzBA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://new-block/./src/icon-picker/edit.js","webpack://new-block/./src/icon-picker/index.js","webpack://new-block/./src/icon-picker/save.js","webpack://new-block/./src/icon-picker/style.scss","webpack://new-block/external window \"React\"","webpack://new-block/external window [\"wp\",\"blockEditor\"]","webpack://new-block/external window [\"wp\",\"blocks\"]","webpack://new-block/external window [\"wp\",\"components\"]","webpack://new-block/external window [\"wp\",\"element\"]","webpack://new-block/external window [\"wp\",\"i18n\"]","webpack://new-block/webpack/bootstrap","webpack://new-block/webpack/runtime/chunk loaded","webpack://new-block/webpack/runtime/compat get default export","webpack://new-block/webpack/runtime/define property getters","webpack://new-block/webpack/runtime/hasOwnProperty shorthand","webpack://new-block/webpack/runtime/make namespace object","webpack://new-block/webpack/runtime/jsonp chunk loading","webpack://new-block/webpack/before-startup","webpack://new-block/webpack/startup","webpack://new-block/webpack/after-startup"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, SelectControl, Modal } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { Fragment } from '@wordpress/element';\n\n\n\n/**\n * Edit component for the custom block.\n * This component provides an interface to select an icon from a predefined list.\n * @param {object} props - Component props.\n * @param {object} props.attributes - Block attributes.\n * @param {Function} props.setAttributes - Function to set block attributes.\n */\nconst Edit = ({ attributes, setAttributes }) => {\n    // Destructure attributes\n    const { selectedIcon } = attributes;\n\n    // State to manage modal visibility\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    // Predefined icon options\n    const iconOptions = [\n        { value: 'fa-coffee', label: 'fa-coffee' },\n        { value: 'fa-filter', label: 'Icon 2' },\n        { value: 'fa-icon3', label: 'Icon 3' },\n    ];\n\n    // Toggle modal visibility\n    const toggleModal = () => {\n        setIsModalOpen(!isModalOpen);\n    };\n\n    // Handle icon selection\n    const handleSelectIcon = (value) => {\n        setAttributes({ selectedIcon: value });\n        toggleModal();\n    };\n\n    // Render block editor UI\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title={__('Icon Settings', 'text-domain')}>\n                    {/* Select control for choosing an icon */}\n                    <SelectControl\n                        label={__('Select Icon', 'text-domain')}\n                        value={selectedIcon}\n                        options={iconOptions}\n                        onChange={(value) => setAttributes({ selectedIcon: value })}\n                        onFocus={toggleModal}\n                    />\n                </PanelBody>\n            </InspectorControls>\n            {/* Display selected icon */}\n            <div className=\"selected-icon\">\n                <i className={`fa ${selectedIcon}`} />\n            </div>\n            {/* Modal for selecting an icon */}\n            {isModalOpen && (\n                <Modal\n                    title={__('Select Icon', 'text-domain')}\n                    onRequestClose={toggleModal}\n                >\n                    <div>\n                        {/* Render buttons for each icon option */}\n                        {iconOptions.map((option) => (\n                            <button\n                                key={option.value}\n                                onClick={() => handleSelectIcon(option.value)}\n                            >\n                                {option.label}\n                            </button>\n                        ))}\n                    </div>\n                </Modal>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Edit;\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @return {Element} Element to render.\n */\n\n\nexport default function save( { attributes } ) {\n  return (\n    <div className=\"test\">\n    <i className={`fa ${selectedIcon}`}></i>\n</div>\n  );\n}","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"icon-picker/index\": 0,\n\t\"icon-picker/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunknew_block\"] = globalThis[\"webpackChunknew_block\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"icon-picker/style-index\"], () => (__webpack_require__(\"./src/icon-picker/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","InspectorControls","PanelBody","SelectControl","Modal","useState","Fragment","Edit","attributes","setAttributes","selectedIcon","isModalOpen","setIsModalOpen","iconOptions","value","label","toggleModal","handleSelectIcon","createElement","title","options","onChange","onFocus","className","onRequestClose","map","option","key","onClick","registerBlockType","save","metadata","name","edit","useBlockProps"],"sourceRoot":""}